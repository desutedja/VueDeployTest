# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.15.3
      - run: npm install
      - run: npm test
      - run: npm run build
    
  pushImageToDockerHub:
      needs: [build]
      runs-on: ubuntu-18.04
      steps:
        - uses: actions/checkout@v2
          name: Check out code

        - uses: mr-smithers-excellent/docker-build-push@v5
          name: Build & push Docker image
          with:
            image: desutedja/docker-container
            tags: latest
            registry: docker.io
            dockerfile: Dockerfile
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
  
  deploy:
    needs: [pushImageToDockerHub]
    runs-on: ubuntu-18.04
    steps:
      - uses: appleboy/ssh-action@v0.1.3
        name: Deploy to Digital Ocean droplet via SSH action
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_KEYPASSWORD }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,COMMAND
          script: |
            echo "pulling image"
            docker pull desutedja/docker-container
            echo "stopping image"

            IMAGE_NAME="img"

            if docker image ls -a "$IMAGE_NAME" | grep -Fq "$IMAGE_NAME" 1>/dev/null; then
            echo "stopping image"
            docker stop img
            fi

            docker run --name img --rm -p 3000:80 desutedja/docker-container
